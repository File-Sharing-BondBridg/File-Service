name: Backend CI/CD - File Service (Docker Hub)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - '**'
      - 'deploy.yml'

env:
  REGISTRY: docker.io
  IMAGE_NAME: nazim112/file-service
  IMAGE_TAG: latest
  GO_VERSION: '1.25.2'

jobs:
  build-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod tidy

      - name: Build Go binary
        run: go build -v -o bin/server ./cmd/server

  test:
    runs-on: ubuntu-latest
    needs: build-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run unit tests
        run: go test -v -short ./...

      - name: Run tests with race detection
        run: go test -race ./...

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out -covermode=atomic ./...

      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  code-analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/nazim112/file-service:latest
          format: 'table'
          severity: 'HIGH,CRITICAL'

  build-and-deploy-image:
    runs-on: ubuntu-latest
    needs: [build-code, test, code-analysis, security-scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug - Check repository structure
        run: |
          echo "=== Current directory structure ==="
          ls -la
          echo ""
          find . -maxdepth 1 -type d | sort
          echo ""
          echo "=== Looking for File-Service ==="
          find . -name "*file*" -type d | head -10

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max